import numpy as np

def seidel(A, B, tolerance=0.01, max_iterations=1000):
    n = len(B)
    X = np.zeros(n)
    iterations = 0
    while iterations < max_iterations:
        X_new = np.copy(X)
        for i in range(n):
            sum1 = np.dot(A[i, :i], X_new[:i])  # Сумма по левой части
            sum2 = np.dot(A[i, i+1:], X[i+1:])  # Сумма по правой части
            X_new[i] = (B[i] - sum1 - sum2) / A[i, i]
        
        # Проверка критерия останова
        if np.linalg.norm(X_new - X) < tolerance:
            break
        
        X = X_new
        iterations += 1
    
    return X_new

def main():
    A = np.array([
        [-19, 2, -3, -8],
        [2, 14, 0, -4],
        [6, -5, -20, -6],
        [-6, 4, -2, 15]
    ], dtype=float)
    
    B = np.array([38, 20, 52, 43], dtype=float)
    
    # Находим решение методом Зейделя
    solution = seidel(A, B, tolerance=0.01)
    
    print("Solution using Seidel method:")
    for i, x in enumerate(solution):
        print(f"x{i+1} = {x}")

if __name__ == "__main__":
    main()
